{"ast":null,"code":"export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED';\nexport const INCREMENT = 'counter/INCREMENT';\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED';\nexport const DECREMENT = 'counter/DECREMENT';\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n};\n\nconst Counter = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return { ...state,\n        isIncrementing: true\n      };\n\n    case INCREMENT:\n      return { ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      };\n\n    case DECREMENT_REQUESTED:\n      return { ...state,\n        isDecrementing: true\n      };\n\n    case DECREMENT:\n      return { ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/varun/Desktop/react-demo/demo-project/src/modules/counter.js"],"names":["INCREMENT_REQUESTED","INCREMENT","DECREMENT_REQUESTED","DECREMENT","initialState","count","isIncrementing","isDecrementing","Counter","state","action","type"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,6BAA5B;AACP,OAAO,MAAMC,SAAS,GAAG,mBAAlB;AACP,OAAO,MAAMC,mBAAmB,GAAG,6BAA5B;AACP,OAAO,MAAMC,SAAS,GAAG,mBAAlB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,cAAc,EAAE,KAFG;AAGnBC,EAAAA,cAAc,EAAE;AAHG,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,mBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAKF,SAAKL,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc,CAFhB;AAGLC,QAAAA,cAAc,EAAE,CAACG,KAAK,CAACH;AAHlB,OAAP;;AAMF,SAAKJ,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAKF,SAAKJ,SAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc,CAFhB;AAGLE,QAAAA,cAAc,EAAE,CAACE,KAAK,CAACF;AAHlB,OAAP;;AAMF;AACE,aAAOE,KAAP;AA5BJ;AA8BD,CA/BD;;KAAMD,O;AAgCN,eAAeA,OAAf","sourcesContent":["export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED';\nexport const INCREMENT = 'counter/INCREMENT';\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED';\nexport const DECREMENT = 'counter/DECREMENT';\n\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n}\n\nconst Counter = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return {\n        ...state,\n        isIncrementing: true\n      }\n\n    case INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      }\n\n    case DECREMENT_REQUESTED:\n      return {\n        ...state,\n        isDecrementing: true\n      }\n\n    case DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      }\n\n    default:\n      return state\n  }\n}\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}