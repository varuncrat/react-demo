{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/varun/Desktop/react-demo/demo-project/src/containers/about/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { updateSlot } from \"./actions\";\nimport { useForm } from \"react-hook-form\";\nimport \"./index.css\";\n\nconst About = props => {\n  _s();\n\n  const {\n    id\n  } = props.match.params;\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const slots = useSelector(state => state.timeSlots);\n  const [selectedSlot, setSelectedSlot] = useState({});\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  useEffect(() => {\n    let timeSlot = slots.find(slot => slot.id === +id);\n    setSelectedSlot(timeSlot);\n  }, [slots, id]);\n\n  const saveDetails = () => {\n    dispatch(updateSlot(selectedSlot));\n    history.push(\"/\");\n  };\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"example\",\n          defaultValue: \"test\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"exampleRequired\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveDetails,\n        children: \"SAVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(About, \"skje6UnhVbfoUd1GQbPZ7kvknbk=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useForm];\n});\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/Users/varun/Desktop/react-demo/demo-project/src/containers/about/index.js"],"names":["React","useState","useEffect","useSelector","useHistory","useDispatch","updateSlot","useForm","About","props","id","match","params","history","dispatch","slots","state","timeSlots","selectedSlot","setSelectedSlot","register","handleSubmit","watch","errors","timeSlot","find","slot","saveDetails","push","onSubmit","data","console","log","required","exampleRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAK,CAACE,KAAN,CAAYC,MAA3B;AACA,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,KAAK,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAAzB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAEmB,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4ChB,OAAO,EAAzD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,QAAQ,GAAGT,KAAK,CAACU,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAAChB,EAAL,KAAY,CAACA,EAAlC,CAAf;AACAS,IAAAA,eAAe,CAACK,QAAD,CAAf;AACD,GAHQ,EAGN,CAACT,KAAD,EAAQL,EAAR,CAHM,CAAT;;AAKA,QAAMiB,WAAW,GAAG,MAAM;AACxBb,IAAAA,QAAQ,CAACR,UAAU,CAACY,YAAD,CAAX,CAAR;AACAL,IAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAME;AAAM,QAAA,QAAQ,EAAET,YAAY,CAACQ,QAAD,CAA5B;AAAA,gCAEE;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,YAAY,EAAC,MAAnC;AAA0C,UAAA,GAAG,EAAET;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAO,UAAA,IAAI,EAAC,iBAAZ;AAA8B,UAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEa,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,gBALF,EAOGV,MAAM,CAACW,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAP7B,eASE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAiBE;AAAQ,QAAA,OAAO,EAAEP,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1CD;;GAAMnB,K;UAEYJ,U,EACCC,W,EACHF,W,EAEoCI,O;;;KAN9CC,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { updateSlot } from \"./actions\";\nimport { useForm } from \"react-hook-form\";\nimport \"./index.css\";\n\nconst About = (props) => {\n  const { id } = props.match.params;\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const slots = useSelector((state) => state.timeSlots);\n  const [selectedSlot, setSelectedSlot] = useState({});\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  useEffect(() => {\n    let timeSlot = slots.find((slot) => slot.id === +id);\n    setSelectedSlot(timeSlot);\n  }, [slots, id]);\n\n  const saveDetails = () => {\n    dispatch(updateSlot(selectedSlot));\n    history.push(\"/\");\n  };\n\n  const onSubmit = (data) => console.log(data);\n  return (\n    <div className=\"about-container\">\n      <div className=\"about-card\">\n        {/* {selectedSlot ? (\n          <h1> {selectedSlot?.startTime}</h1>\n        ) : (\n          <h1>Not found</h1>\n        )} */}\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {/* register your input into the hook by invoking the \"register\" function */}\n          <input name=\"example\" defaultValue=\"test\" ref={register} />\n\n          {/* include validation with required or other standard HTML validation rules */}\n          <input name=\"exampleRequired\" ref={register({ required: true })} />\n          {/* errors will return when field validation fails  */}\n          {errors.exampleRequired && <span>This field is required</span>}\n\n          <input type=\"submit\" />\n        </form>\n        <button onClick={saveDetails}>SAVE</button>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}